<?phpnamespace linnetts {	class Job extends \core\Object {		public static function getColumns() {			return array(				'title'				=> array('type' => 'string'),				'client_ref'		=> array('type' => 'string'),								'brief'				=> array('type' => 'short_text'),				'pass_by'			=> array('type' => 'string'),												'date'				=> array('type' => 'date'),								'date_aw'			=> array('type' => 'date'),				'date_to_press'		=> array('type' => 'date'),				'date_to_screen'	=> array('type' => 'date'),				'date_to_finishing'	=> array('type' => 'date'),				'deadline'			=> array('type' => 'date'),				// STOCK				'stock'				=> array('type' => 'string'),				'stock_cost'		=> array('type' => 'float'),				// RUN				'run'				=> array('type' => 'string'),				'sheets_mounted'	=> array('type' => 'integer'),				'mounting_cost'		=> array('type' => 'float'),				// REPRO				'nb3_plates'		=> array('type' => 'integer'),				'nb2_plates'		=> array('type' => 'integer'),				'nb1_plates'		=> array('type' => 'integer'),				'plate_cost'		=> array('type' => 'float'),				'mac_hours'			=> array('type' => 'float'),				'mac_hours_cost'	=> array('type' => 'float'),				'total_repro'		=> array('type' => 'float'),				// PRESSROOM				'nb3_cols'			=> array('type' => 'integer'),				'nb2_cols'			=> array('type' => 'integer'),				'nb1_cols'			=> array('type' => 'integer'),				'cols_cost'			=> array('type' => 'float'),				'press_hours'		=> array('type' => 'float'),				'press_hours_cost'	=> array('type' => 'float'),				'total_press_cost'	=> array('type' => 'float'),					// FINISHING				'fin_1'				=> array('type' => 'string'),				'fin_2'				=> array('type' => 'string'),				'fin_3'				=> array('type' => 'string'),				'fin_4'				=> array('type' => 'string'),				'fin_5'				=> array('type' => 'string'),				'fin_1_cost'		=> array('type' => 'float'),				'fin_2_cost'		=> array('type' => 'float'),				'fin_3_cost'		=> array('type' => 'float'),				'fin_4_cost'		=> array('type' => 'float'),				'fin_5_cost'		=> array('type' => 'float'),				'total_fin'			=> array('type' => 'float'),				// SCREENPRINT				'screens'			=> array('type' => 'short_text'),				'n_cols'			=> array('type' => 'string'),				'total_scr_cost'	=> array('type' => 'float'),				// EXTRA				'extra_notes'		=> array('type' => 'short_text'),				'extra_cost'		=> array('type' => 'float'),				// INVOICE				'invoice_text'		=> array('type' => 'short_text'),												// DELIVERY				'delivery'			=> array('type' => 'short_text'),				'delivery_cost'		=> array('type' => 'float'),				// PRICE				'tariff'			=> array('type' => 'float'),								'price'				=> array('type' => 'function', 'result_type' => 'float', 'function' => 'linnetts\Job::getPrice'),				'vat'				=> array('type' => 'float'),								'invoice_id'		=> array('type' => 'many2one', 'foreign_object' => 'linnetts\Invoice'),				'customer_id'		=> array('type' => 'many2one', 'foreign_object' => 'linnetts\Customer'),				//				'tasks_ids'			=> array('type' => 'one2many', 'foreign_object'	=> 'linnetts\Task', 'foreign_field' => 'job_id'),				'workdays_ids'	 	=> array('type' => 'many2many', 'foreign_object' => 'linnetts\Workday', 'foreign_field' => 'jobs_ids', 'rel_table' => 'linnetts_rel_workday_job', 'rel_foreign_key' => 'workday_id', 'rel_local_key' => 'job_id'),								'customer_name'		=> array('type' => 'related', 'store' => true, 'result_type' => 'string', 'foreign_object' => 'linnetts\Customer', 'path' => array('customer_id', 'name'))							);		}				public static function getDefaults() {			return array(				'date'				=> function() { return date("Y-m-d"); },				'stock_cost'		=> function() { return 0.0; },				'mounting_cost'		=> function() { return 0.0; }, 				'total_repro'		=> function() { return 0.0; },				'total_press_cost'	=> function() { return 0.0; },				'total_fin'			=> function() { return 0.0; },				'total_scr_cost'	=> function() { return 0.0; },				'extra_cost'		=> function() { return 0.0; },				'delivery_cost'		=> function() { return 0.0; },			);		}				public static function getPrice($om, $uid, $oid, $lang) {			$price = 0.0;			$costs_fields = array('stock_cost', 'mounting_cost', 'total_repro', 'total_press_cost', 'total_fin', 'total_scr_cost', 'extra_cost', 'delivery_cost');			$res = $om->browse($uid, 'linnetts\Job', array($oid), $costs_fields, $lang);			foreach($costs_fields as $cost_field) $price += $res[$oid][$cost_field];			return $price;					}					}}